#   * 진행순서[공통]
#   [0] 레포지터리 체크아웃
#   [1] 캐싱 사용 node_modules
#   [2] npm 의존성 설치
#   [3] Build(dev OR prod)
#   [4] Test
#   [5] 도커 이미지 생성
#   [6] Push 도커 이미지

name: React prod
on: 
  push:
    branches:
      - master

      
env: 
  IMAGE_NAME: jangbuda-front-app:prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source sode   # 레포지터리 체크아웃 [0]
        uses: actions/checkout@v1

      - name: Caching node_modules    # node_modules 캐싱 [1]
        uses: actions/cache@v1
        with: 
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-key: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies    # 의존성 설치 [2]
        run: npm install 
      
      - name: Build prod mode         # build prod mode [3]
        run: npm run build

      - name: Test                    # 테스트 케이스 [4]
        run: npm run test:unit
      
      - name: Build image             # image 생성 [5]
        run: docker build -t $IMAGE_NAME -f Dockerfile.prod .

      #   <해야할 일> 이미지 푸시하는 작업하기. Github의 Docker-hub에  [6]
#      - name: Push image
#        run: 

#      - name: Deploy                  # S3에 배포하기.
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        run: |
#          aws s3 cp \
#            --recursive \
#            --region ap-northeast-2 \
#            build s3://github-action-testing

